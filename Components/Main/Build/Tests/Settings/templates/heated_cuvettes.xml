<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hw_specification>
<hwconfig version="1.0">
    <parameter_master folded="yes">
        <can_interface interface="can0"> </can_interface> <!-- network interface used for CAN bus communication -->
        <tcp_interface usage="0"> </tcp_interface> <!-- tcp network interface used for CAN bus simulation -->
        <nodetype>0</nodetype>
        <nodeindex>0</nodeindex>
        <serial_number serialno="holdrio4711"> </serial_number>
    </parameter_master>
    <parameter_slaves>
        <!-- key is a unique string which identifies this 'can interface'
             name is a string as shown on application controls, e.g. lists or message boxes -->
        <!-- If this file is used by ColoPiaSimulator, the setting 'virtual="0"/"1"' at the following
             line enables you to use this slave as a real slave on CAN-Bus, embedded into the rest-simulation.
             If virtual="1", the simulator just receives the CAN-messages, e.g. to show
             the movements. But initlaisation and all other stuff mst be done by the slave itself
             You can at the virtual-tag at every slave within this module -->
        <slave type="base" key="hot_tube" name="hot tube">
            <!-- ASB5 hot tube: temperature control for colorado hot tube -->
            <nodetype>5</nodetype>
            <nodeindex>0</nodeindex>
            <functionmodules>
                <functionmodule type="temperature_control" key="temperature_control_vessel1" name="temperature control vessel 1" interface="1">
                    <configuration
                        temp_tolerance="2"
                        sampling_period="100"
                        current_gain="7813"
                        heater_current="800"
                        heater_threshold="200"
                        />
                    <pid_controllers>
                        <pid_controller max_temperature="55" controller_gain="3543" reset_time="17300" derivative_time="2940" />
                        <pid_controller max_temperature="100" controller_gain="2940" reset_time="1100" derivative_time="440" />
                    </pid_controllers>
                </functionmodule>
                <functionmodule type="temperature_control" key="temperature_control_vessel2" name="temperature control vessel 2" interface="2">
                    <configuration
                        temp_tolerance="2"
                        sampling_period="100"
                        current_gain="7813"
                        heater_current="800"
                        heater_threshold="200"
                        />
                    <pid_controllers>
                        <pid_controller max_temperature="55" controller_gain="3543" reset_time="17300" derivative_time="2940" />
                        <pid_controller max_temperature="100" controller_gain="2940" reset_time="1100" derivative_time="440" />
                    </pid_controllers>
                </functionmodule>
                <functionmodule type="temperature_control" key="temperature_control_vessel3" name="temperature control vessel 3" interface="3">
                    <configuration
                        temp_tolerance="2"
                        sampling_period="100"
                        current_gain="7813"
                        heater_current="800"
                        heater_threshold="200"
                        />
                    <pid_controllers>
                        <pid_controller max_temperature="55" controller_gain="3543" reset_time="17300" derivative_time="2940" />
                        <pid_controller max_temperature="100" controller_gain="2940" reset_time="1100" derivative_time="440" />
                    </pid_controllers>
                </functionmodule>
                <functionmodule type="temperature_control" key="temperature_control_vessel4" name="temperature control vessel 4" interface="4">
                    <configuration
                        temp_tolerance="2"
                        sampling_period="100"
                        current_gain="7813"
                        heater_current="800"
                        heater_threshold="200"
                        />
                    <pid_controllers>
                        <pid_controller max_temperature="55" controller_gain="3543" reset_time="17300" derivative_time="2940" />
                        <pid_controller max_temperature="100" controller_gain="2940" reset_time="1100" derivative_time="440" />
                    </pid_controllers>
                </functionmodule>
            </functionmodules>
        </slave>
    </parameter_slaves>
    <devices>
        <!-- This section lists all devices, which should be created at configuration procedure -->
        <!-- the key entries at the function_module section must match the QStrings at DeviceProcessing.cpp -->
        <!-- the fct_instanceID entries must match the function module's channel <12..19> and the parent's NodeID <0...11> -->
    </devices>
</hwconfig>
