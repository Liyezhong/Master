<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hw_specification>
<hwconfig version="1.0">
    <parameter_master folded="yes">
        <can_interface interface="can0"> </can_interface> <!-- network interface used for CAN bus communication -->
        <tcp_interface usage="0"> </tcp_interface> <!-- tcp network interface used for CAN bus simulation -->
        <nodetype>0</nodetype>
        <nodeindex>0</nodeindex>
        <serial_number serialno="holdrio4711"> </serial_number>
    </parameter_master>
    <parameter_slaves>
        <!-- key is a unique string which identifies this 'can interface'
             name is a string as shown on application controls, e.g. lists or message boxes -->
        <!-- If this file is used by ColoPiaSimulator, the setting 'virtual="0"/"1"' at the following
             line enables you to use this slave as a real slave on CAN-Bus, embedded into the rest-simulation.
             If virtual="1", the simulator just receives the CAN-messages, e.g. to show
             the movements. But initlaisation and all other stuff mst be done by the slave itself
             You can at the virtual-tag at every slave within this module -->
        <slave type="base" key="slide_detection" name="slide detection" virtual="0">
            <!-- ASB12 slide counter: 1 photo detector, 1 pwm modulator, 2 potentiometers, 1 camera signal -->
            <nodetype>12</nodetype>
            <nodeindex>0</nodeindex>
            <functionmodules>
                <functionmodule type="analog_in" key="photo_detector" name="photo electric detector" interface="1">
                    <configuration
                        enabled="1"
                        timestamp="0"
                        fast_sampling="1"
                        limit_autosend="0"
                        interval="1"
                        debounce="0"
                        />
                    <limit_supervision
                        value1_send_at_exceed="0"
                        value1_send_at_fall_below="0"
                        value1_send_warn_message="0"
			value1_send_data_message="1"
                        value1="200"
                        value2_send_at_exceed="0"
                        value2_send_at_fall_below="0"
                        value2_send_warn_message="0"
                        value2_send_data_message="0"
                        value2="0"
                        hysteresis="0"
                        />
                </functionmodule>
                <functionmodule type="analog_out" key="transmit_control" name="transmit control" interface="2">
                    <configuration
                        enabled="1"
                        inactiv_shutdown="1"
                        inactiv_emcy="1"
                        resolution="16"
                        outval_incactiv="65535"
                        livetime_limit="65535"
                        />
                </functionmodule>
                <functionmodule type="analog_out" key="transmit_current" name="transmit current" interface="3">
                    <configuration
                        enabled="1"
                        inactiv_shutdown="1"
                        inactiv_emcy="1"
                        resolution="16"
                        outval_inactiv="255"
                        livetime_limit="255"
                        />
                </functionmodule>
                <functionmodule type="analog_out" key="receive_current" name="receive current" interface="4">
                    <configuration
                        enabled="1"
                        inactiv_shutdown="1"
                        inactiv_emcy="1"
                        resolution="16"
                        outval_inactiv="0"
                        livetime_limit="0"
                        />
                </functionmodule>
                <functionmodule type="digital_out" key="camera_signal" name="camera signal" interface="5">
                    <configuration
                        enabled="1"
                        inactiv_shutdown="1"
                        inactiv_emcy="1"
                        polarity="0"
                        outval_inactiv="0"
                        livetime_limit="0"
                        />
                </functionmodule>
            </functionmodules>
        </slave>
    </parameter_slaves>
    <devices>
        <!-- This section lists all devices, which should be created at configuration procedure -->
        <!-- the key entries at the function_module section must match the QStrings at DeviceProcessing.cpp -->
        <!-- the fct_instanceID entries must match the function module's channel <12..19> and the parent's NodeID <0...11> -->
    </devices>
</hwconfig>
